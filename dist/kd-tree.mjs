"use strict";let g=class{left=null;right=null;obj;parent;dimension;constructor(t,e,i){let l=this;l.obj=t,l.parent=i,l.dimension=e}};function a(h){this.content=[],this.scoreFunction=h}a.prototype={push:function(h){this.content.push(h),this.bubbleUp(this.content.length-1)},pop:function(){let h=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.sinkDown(0)),h},peek:function(){return this.content[0]},remove:function(h){for(let t=this.content.length,e=0;e<t;e++)if(this.content[e]==h){let i=this.content.pop();e!=t-1&&(this.content[e]=i,this.scoreFunction(i)<this.scoreFunction(h)?this.bubbleUp(e):this.sinkDown(e));return}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(h){for(let t=this.content[h];h>0;){let e=Math.floor((h+1)/2)-1,i=this.content[e];if(this.scoreFunction(t)<this.scoreFunction(i))this.content[e]=t,this.content[h]=i,h=e;else break}},sinkDown:function(h){for(let t=this.content.length,e=this.content[h],i=this.scoreFunction(e);;){let l=(h+1)*2,n=l-1,r=null;if(n<t){let u=this.content[n],s=this.scoreFunction(u);s<i&&(r=n)}if(l<t){let c=this.content[l],o=this.scoreFunction(c);o<(r==null?i:s)&&(r=l)}if(r!=null)this.content[h]=this.content[r],this.content[r]=e,h=r;else break}}};let j=class{#t;#i;root;get dimensions(){return this.#t}get metric(){return this.#i}#l(t,e,i){let l=this,n=e%l.#t.length;if(t.length===0)return null;if(t.length===1)return new g(t[0],n,i);t.sort((s,c)=>s[l.#t[n]]-c[l.#t[n]]);let r=t.length>>1,u=new g(t[r],n,i);return u.left=l.#l(t.slice(0,r),e+1,u),u.right=l.#l(t.slice(r+1),e+1,u),u}#n(t){let e=this;t.left&&(t.left.parent=t,e.#n(t.left)),t.right&&(t.right.parent=t,e.#n(t.right))}#g(t){this.root=t,this.#n(this.root)}#r(t,e,i){if(t===null)return e;let l=dimensions[t.dimension];return i[l]<t.obj[l]?upThis.#r(t.left,t,i):upThis.#r(t.right,t,i)}#h(t,e){let i=this;if(t===null)return null;if(t.obj===e)return t;let l=i.#t[t.dimension];return e[l]<t.obj[l]?i.#h(t.left,e):i.#h(t.right,e)}#e(t,e){let i=this;if(t===null)return null;let l=i.#t[e];if(t.dimension===e)return t.left!=null?i.#e(t.left,e):t;let n=t.obj[l],r=i.#e(t.left,e),u=i.#e(t.right,e),s=t;return r!=null&&r.obj[l]<n&&(s=r),u!=null&&u.obj[l]<s.obj[l]&&(s=u),s}#u(t){let e=this;if(t.left===null&&t.right===null){if(t.parent===null){e.root=null;return}let i=e.#t[t.parent.dimension];t.obj[i]<t.parent.obj[i]?t.parent.left=null:t.parent.right=null;return}if(t.right==null){let i=e.#e(t.left,t.dimension),l=i.obj;e.#u(i),t.right=t.left,t.left=null,t.obj=l}else{let i=e.#e(t.right,t.dimension),l=i.obj;e.#u(i),t.obj=l}}#c(t,e,i,l){i.push([t,e]),i.size()>l&&i.pop()}#s(t,e,i,l){let n=this,r=n.#t[t.dimension],u=n.#i(e,t.obj),s=[];for(let f=0;f<n.#t.length;f++)f===t.dimension?s[n.#t[f]]=e[n.#t[f]]:s[n.#t[f]]=t.obj[n.#t[f]];let c=n.#i(s,t.obj);if(t.right===null&&t.left===null){(i.size()<l||u<i.peek()[1])&&n.#c(t,u,i,l);return}let o;if(t.right===null?o=t.left:t.left===null?o=t.right:e[r]<t.obj[r]?o=t.left:o=t.right,n.#s(o,e,i,l),(i.size()<l||u<i.peek()[1])&&n.#c(t,u,i,l),i.size()<l||Math.abs(c)<i.peek()[1]){let f;o===t.left?f=t.right:f=t.left,f!=null&&n.#s(f,e,i,l)}}#f(t){return t==null?0:Math.max(this.#f(t.left),this.#f(t.right))+1}#o(t){return t==null?0:this.#o(t.left)+this.#o(t.right)+1}toJSON(t){let e=this;t||(t=e.root);let i=new g(t.obj,t.dimension,null);return t.left&&(i.left=e.toJSON(t.left)),t.right&&(i.right=e.toJSON(t.right)),i}insert(t){let e=this,i=e.#r(e.root,null,t);if(i===null){e.root=new g(t,0,null);return}let l=new g(t,(i.dimension+1)%e.#t.length,i),n=e.#t[i.dimension];t[n]<i.obj[n]?i.left=l:i.right=l}remove(t){let e=this,i=e.#h(e.root,t);i!==null&&e.#u(i)}nearest(t,e,i){let l=new a(r=>-r[1]);if(i)for(let r=0;r<e;r++)l.push([null,i]);this.root&&this.#s(this.root,t,l,e);let n=[];for(let r=0;r<Math.min(e,l.content.length);r++)l.content[r][0]&&n.push([l.content[r][0].obj,l.content[r][1]]);return n}balanceFactor(){let t=this;return t.#f(t.root)/Math.log(t.#o(t.root))/Math.LN2}constructor(t,e,i){let l=this;l.#t=i,l.#i=e,Array.isArray(t)?l.root=l.#l(t,0,null):l.#g(t,e,i)}};export{j as KDTree,a as KDTreeBinaryHeap};
/**
 * k-d Tree JavaScript - v1.1
 *
 * https://github.com/ubilabs/kd-tree-javascript
 * https://github.com/ltgcgo/kd-tree
 * https://codeberg.org/ltgc/kd-tree
 *
 * @author Mircea Pricop <pricop@ubilabs.net>, 2012
 * @author Martin Kleppe <kleppe@ubilabs.net>, 2012
 * @author Ubilabs http://ubilabs.net, 2012
 * @author Lumière Élevé <ble-m@ltgc.cc>, 2025
 * @author Lightingale Community https://ltgc.cc, 2025
 * @license MIT License <http://www.opensource.org/licenses/mit-license.php>
 */
