"use strict";let a=class{left=null;right=null;obj;parent;dimension;constructor(t,e,i){let l=this;l.obj=t,l.parent=i,l.dimension=e}};function o(u){this.content=[],this.scoreFunction=u}o.prototype={push:function(u){this.content.push(u),this.bubbleUp(this.content.length-1)},pop:function(){let u=this.content[0],t=this.content.pop();return this.content.length>0&&(this.content[0]=t,this.sinkDown(0)),u},peek:function(){return this.content[0]},remove:function(u){for(let t=this.content.length,e=0;e<t;e++)if(this.content[e]==u){let i=this.content.pop();e!=t-1&&(this.content[e]=i,this.scoreFunction(i)<this.scoreFunction(u)?this.bubbleUp(e):this.sinkDown(e));return}throw new Error("Node not found.")},size:function(){return this.content.length},bubbleUp:function(u){for(let t=this.content[u];u>0;){let e=Math.floor((u+1)/2)-1,i=this.content[e];if(this.scoreFunction(t)<this.scoreFunction(i))this.content[e]=t,this.content[u]=i,u=e;else break}},sinkDown:function(u){for(let t=this.content.length,e=this.content[u],i=this.scoreFunction(e);;){let l=(u+1)*2,r=l-1,n=null;if(r<t){let f=this.content[r],h=this.scoreFunction(f);h<i&&(n=r)}if(l<t){let g=this.content[l],c=this.scoreFunction(g);c<(n==null?i:h)&&(n=l)}if(n!=null)this.content[u]=this.content[n],this.content[n]=e,u=n;else break}}};let j=class{#t;#i;root;get dimensions(){return this.#t}get metric(){return this.#i}#l(t,e,i){let l=this,r=e%l.#t.length;if(t.length===0)return null;if(t.length===1)return new a(t[0],r,i);t.sort((h,g)=>h[l.#t[r]]-g[l.#t[r]]);let n=t.length>>1,f=new a(t[n],r,i);return f.left=l.#l(t.slice(0,n),e+1,f),f.right=l.#l(t.slice(n+1),e+1,f),f}#r(t){let e=this;t.left&&(t.left.parent=t,e.#r(t.left)),t.right&&(t.right.parent=t,e.#r(t.right))}#a(t){this.root=t,this.#r(this.root)}#n(t,e,i){if(t===null)return e;let l=dimensions[t.dimension];return i[l]<t.obj[l]?upThis.#n(t.left,t,i):upThis.#n(t.right,t,i)}#u(t,e){let i=this;if(t===null)return null;if(t.obj===e)return t;let l=i.#t[t.dimension];return e[l]<t.obj[l]?i.#u(t.left,e):i.#u(t.right,e)}#e(t,e){let i=this;if(t===null)return null;let l=i.#t[e];if(t.dimension===e)return t.left!=null?i.#e(t.left,e):t;let r=t.obj[l],n=i.#e(t.left,e),f=i.#e(t.right,e),h=t;return n!=null&&n.obj[l]<r&&(h=n),f!=null&&f.obj[l]<h.obj[l]&&(h=f),h}#f(t){let e=this;if(t.left===null&&t.right===null){if(t.parent===null){e.root=null;return}let i=e.#t[t.parent.dimension];t.obj[i]<t.parent.obj[i]?t.parent.left=null:t.parent.right=null;return}if(t.right==null){let i=e.#e(t.left,t.dimension),l=i.obj;e.#f(i),t.right=t.left,t.left=null,t.obj=l}else{let i=e.#e(t.right,t.dimension),l=i.obj;e.#f(i),t.obj=l}}#g(t,e,i,l){i.push([t,e]),i.size()>l&&i.pop()}#h(t,e,i,l){let r=this,n=r.#t[t.dimension],f=r.#i(e,t.obj),h=[];for(let s=0;s<r.#t.length;s++)s===t.dimension?h[r.#t[s]]=e[r.#t[s]]:h[r.#t[s]]=t.obj[r.#t[s]];let g=r.#i(h,t.obj);if(t.right===null&&t.left===null){(i.size()<l||f<i.peek()[1])&&r.#g(t,f,i,l);return}let c;if(t.right===null?c=t.left:t.left===null?c=t.right:e[n]<t.obj[n]?c=t.left:c=t.right,r.#h(c,e,i,l),(i.size()<l||f<i.peek()[1])&&r.#g(t,f,i,l),i.size()<l||Math.abs(g)<i.peek()[1]){let s;c===t.left?s=t.right:s=t.left,s!=null&&r.#h(s,e,i,l)}}#s(t){return t==null?0:Math.max(this.#s(t.left),this.#s(t.right))+1}#c(t){return t==null?0:this.#c(t.left)+this.#c(t.right)+1}toJSON(t){let e=this;t||(t=e.root);let i=new a(t.obj,t.dimension,null);return t.left&&(i.left=e.toJSON(t.left)),t.right&&(i.right=e.toJSON(t.right)),i}insert(t){let e=this,i=e.#n(e.root,null,t);if(i===null){e.root=new a(t,0,null);return}let l=new a(t,(i.dimension+1)%e.#t.length,i),r=e.#t[i.dimension];t[r]<i.obj[r]?i.left=l:i.right=l}remove(t){let e=this,i=e.#u(e.root,t);i!==null&&e.#f(i)}nearest(t,e,i){let l=new o(n=>-n[1]);if(i)for(let n=0;n<e;n++)l.push([null,i]);this.root&&this.#h(this.root,t,l,e);let r=[];for(let n=0;n<Math.min(e,l.content.length);n++)l.content[n][0]&&r.push([l.content[n][0].obj,l.content[n][1]]);return r}balanceFactor(){let t=this;return t.#s(t.root)/Math.log(t.#c(t.root))/Math.LN2}constructor(t,e,i){let l=this;l.#t=i,l.#i=e,Array.isArray(t)?l.root=l.#l(t,0,null):l.#a(t,e,i)}};export{j as KDTree,o as KDTreeBinaryHeap};
/**
 * k-d Tree JavaScript - v1.1
 *
 * https://github.com/ubilabs/kd-tree-javascript
 * https://github.com/ltgcgo/kd-tree
 * https://codeberg.org/ltgc/kd-tree
 *
 * @author Mircea Pricop <pricop@ubilabs.net>, 2012
 * @author Martin Kleppe <kleppe@ubilabs.net>, 2012
 * @author Ubilabs http://ubilabs.net, 2012
 * @author Lumière Élevé <ble-m@ltgc.cc>, 2025
 * @author Lightingale Community https://ltgc.cc, 2025
 * @license MIT License <http://www.opensource.org/licenses/mit-license.php>
 */
